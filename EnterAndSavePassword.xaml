<Activity mc:Ignorable="sap sap2010" x:Class="EnterAndSavePassword" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="GitHubPassword" Type="InOutArgument(ss:SecureString)" />
    <x:Property Name="PasswordConfirmation" Type="InOutArgument(ss:SecureString)" />
    <x:Property Name="PasswordsMatch" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="1106,3408" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Save Password" sap:VirtualizedContainerService.HintSize="541,3385" sap2010:WorkflowViewState.IdRef="Sequence_12">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="PasswordResult" />
        <Variable x:TypeArguments="x:String" Name="GHPasswordConfirmation" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[Not GlobalVariablesNamespace.GlobalVariables.IsValidPassword]" DisplayName="Do While password is not valid" sap:VirtualizedContainerService.HintSize="507,1867" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
        <ui:InterruptibleWhile.Body>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="505,1736" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="IsLongEnough" />
              <Variable x:TypeArguments="x:Boolean" Name="IsAtLeast8Chars" />
              <Variable x:TypeArguments="x:Boolean" Name="ContainsNumber" />
              <Variable x:TypeArguments="x:Boolean" Name="ContainsLowercase" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Prompt the user to 'Enter Password'" sap:VirtualizedContainerService.HintSize="471,275" sap2010:WorkflowViewState.IdRef="InputDialog_4" IsPassword="True" Label="Enter Password" Title="Enter your GitHub Password" TopMost="False">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:String">[PasswordResult]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <Assign DisplayName="Check if the entered password is at least 15 characters long." sap:VirtualizedContainerService.HintSize="471,115" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[IsLongEnough]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">[PasswordResult.Length &gt;= 15]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Check if the entered password is at least 8 characters long." sap:VirtualizedContainerService.HintSize="471,115" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[IsAtLeast8Chars]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">[PasswordResult.Length &gt;= 8]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:IsMatch DisplayName="Check if the entered password contains at least one number." sap:VirtualizedContainerService.HintSize="471,92" sap2010:WorkflowViewState.IdRef="IsMatch_4" Input="[PasswordResult]" IsBuilderTabModified="False" Pattern="%[\\d]" RegexOption="IgnoreCase, Compiled" Result="[ContainsNumber]" />
            <ui:IsMatch DisplayName="Check if the entered password contains at least one lowercase letter." sap:VirtualizedContainerService.HintSize="471,92" sap2010:WorkflowViewState.IdRef="IsMatch_5" Input="[PasswordResult]" IsBuilderTabModified="False" Pattern="%[a-z]" RegexOption="IgnoreCase, Compiled" Result="[ContainsLowercase]" />
            <If Condition="[IsLongEnough OrElse IsAtLeast8Chars AndAlso ContainsNumber AndAlso ContainsLowercase]" DisplayName="If (password length &gt;= 15) OR (password length &gt;= 8 AND contains number AND contains lowercase letter)" sap:VirtualizedContainerService.HintSize="471,987" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="469,398" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log a success message." sap:VirtualizedContainerService.HintSize="435,175" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Password is valid.&quot;]" />
                  <Assign DisplayName="Assign IsValidPassword to true" sap:VirtualizedContainerService.HintSize="435,115" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[IsValidPassword]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">[True]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Break DisplayName="Break the loop." sap:VirtualizedContainerService.HintSize="435,48" sap2010:WorkflowViewState.IdRef="Break_2" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="469,459" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="435,118" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[&quot;Password must be at least 15 characters OR at least 8 characters including a number and a lowercase letter.&quot;]" />
                  <Assign DisplayName="Assign IsValidPassword to false" sap:VirtualizedContainerService.HintSize="435,115" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[GlobalVariablesNamespace.GlobalVariables.IsValidPassword]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="435,166" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Warn" Message="[&quot;Password could not be saved&quot;]" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ui:InterruptibleWhile.Body>
      </ui:InterruptibleWhile>
      <Assign DisplayName="Assign Password Result to Secure String GitHubPassword" sap:VirtualizedContainerService.HintSize="507,115" sap2010:WorkflowViewState.IdRef="Assign_13">
        <Assign.To>
          <OutArgument x:TypeArguments="ss:SecureString">[GitHubPassword]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="ss:SecureString">[New System.Net.NetworkCredential("", PasswordResult).SecurePassword]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log GitHubPassword" sap:VirtualizedContainerService.HintSize="507,175" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[GitHubPassword]" />
      <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Confirm Password" sap:VirtualizedContainerService.HintSize="507,275" sap2010:WorkflowViewState.IdRef="InputDialog_5" IsPassword="True" Label="Confirm Password" Title="Confirm your GitHub Password" TopMost="False">
        <ui:InputDialog.Result>
          <OutArgument x:TypeArguments="x:String">[GHPasswordConfirmation]</OutArgument>
        </ui:InputDialog.Result>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InputDialog>
      <Assign DisplayName="Assign GHPasswordConfirmation to PasswordConfirmation" sap:VirtualizedContainerService.HintSize="507,115" sap2010:WorkflowViewState.IdRef="Assign_14">
        <Assign.To>
          <OutArgument x:TypeArguments="ss:SecureString">[PasswordConfirmation]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="ss:SecureString">[New System.Net.NetworkCredential("", GHPasswordConfirmation).SecurePassword]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[New System.Net.NetworkCredential(&quot;&quot;, GitHubPassword).Password = New System.Net.NetworkCredential(&quot;&quot;, PasswordConfirmation).Password]" DisplayName="If GitHubPassword and ConfirmPassword match" sap:VirtualizedContainerService.HintSize="507,755" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Then>
          <Sequence DisplayName="Then log successful match" sap:VirtualizedContainerService.HintSize="468,341" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log passwords match" sap:VirtualizedContainerService.HintSize="434,175" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Passwords match&quot;]" />
            <Assign DisplayName="Assign PasswordsMatch to true" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[PasswordsMatch]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else throw error for unmatched password" sap:VirtualizedContainerService.HintSize="468,284" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="434,118" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[&quot;Passwords do not match&quot;]" />
            <Assign DisplayName="Assign PasswordsMatch to false" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[PasswordsMatch]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>